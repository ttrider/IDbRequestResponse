<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{E36C36CF-F0C4-4EDA-B664-AF05B6AB3C1B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>TTRider.Data.RequestResponse</RootNamespace>
    <AssemblyName>TTRider.IDbRequestResponse</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="TTRider.IDbConnection-Async, Version=1.0.1.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\TTRider.IDbConnection-Async.1.0.2\lib\net45\TTRider.IDbConnection-Async.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="DbRequest.cs" />
    <Compile Include="DbRequestMode.cs" />
    <Compile Include="DbResponseAsync.cs" />
    <Compile Include="DbResponse.cs" />
    <Compile Include="DbRequestResponse.cs" />
    <Compile Include="IDbRequest.cs" />
    <Compile Include="IDbRequestLogging.cs" />
    <Compile Include="IDbResponse.cs" />
    <Compile Include="LogEventArgs.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Utilities.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="TTRider.IDbRequestResponse.nuspec">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <NugetPacking>$(TargetDir)\nugetpack</NugetPacking>
    <NugetPackingLib>$(TargetDir)\nugetpack\lib\net45</NugetPackingLib>
    <NugetTarget>$(SolutionDir)nuget\$(ConfigurationName)</NugetTarget>
    <NugetApp>$(SolutionDir)nuget\nuget.exe</NugetApp>
  </PropertyGroup>
  <Target Name="AfterBuild">
    <RemoveDir Directories="$(NugetPacking);" Condition="Exists(@(NugetPacking))" />
    <MakeDir Directories="$(NugetPacking)" />
    <MakeDir Directories="$(NugetPackingLib)" />
    <MakeDir Directories="$(NugetTarget)" Condition="!Exists(@(NugetTarget))" />
    <Copy SourceFiles="$(TargetPath)" DestinationFolder="$(NugetPackingLib)" OverwriteReadOnlyFiles="true" />
    <Copy SourceFiles="$(TargetDir)$(TargetName).pdb" DestinationFolder="$(NugetPackingLib)" OverwriteReadOnlyFiles="true" />
    <Copy SourceFiles="$(ProjectDir)$(AssemblyName).nuspec" DestinationFolder="$(NugetPacking)" OverwriteReadOnlyFiles="true" />
    <Exec Condition="Exists($(NugetApp))" Command="$(SolutionDir)nuget\nuget pack $(NugetPacking)\$(AssemblyName).nuspec -OutputDir $(NugetTarget)" />
  </Target>
</Project>